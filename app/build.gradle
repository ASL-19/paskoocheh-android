apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'com.google.firebase.crashlytics'


buildscript {
    repositories {
            maven { url 'https://plugins.gradle.org/m2/' }
        google()
    }
    dependencies {
    classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.5.1"
    }
}

repositories {
//    maven {
//        url 'https://maven.fabric.io/public'
//    }
    // flatDir {
    //     dirs "${System.env.OUINET_BUILDDIR}"
    // }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "org.asl19.paskoocheh"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 308
        versionName "3.0.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile rootProject.file('debug.keystore')
        }

    }
    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }
        staging {
            initWith debug
            applicationIdSuffix ".staging"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
            //signingConfig signingConfigs.debug
        }
        dev {
            initWith debug
            applicationIdSuffix ".dev"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        dev {
            java {
                srcDirs 'src/dev/java'
            }
        }
        staging {
            java {
                srcDirs 'src/staging/java'
            }
        }
    }
}

checkstyle {
    configFile = file("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    toolVersion = '7.0'
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:design:$rootProject.supportLibraryVersion"
        force "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //App's dependencies
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'androidx.recyclerview:recyclerview:1.1.0-rc01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Utility Library
    implementation 'com.fernandocejas:arrow:1.0.0'
    //implementation files('ouinet-arm64-v8a-release-2021-01-22_1301')
    //implementation(name: "${System.env.OUINET_LIBRARY}", ext: 'aar')
    implementation project(':ouinet-arm64-v8a-release-2021-01-22_1301')
    implementation "com.android.support:support-core-utils:28.0.0"

    // Android Testing Support runner and rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Espresso UI Testing
    androidTestImplementation 'androidx.recyclerview:recyclerview:1.1.0-rc01'
    androidTestImplementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0-alpha02'

    //Annotations
    compileOnly "javax.annotation:jsr250-api:$rootProject.javaxAnnotationVersion"

    //Event Bus
    implementation "org.greenrobot:eventbus:$rootProject.eventbusVersion"

    //Butterknife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttp3Version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okHttp3Version"

    //Amazon
    implementation "com.amazonaws:aws-android-sdk-core:$rootProject.amazonVersion"
    implementation "com.amazonaws:aws-android-sdk-s3:$rootProject.amazonVersion"
    implementation "com.amazonaws:aws-android-sdk-cognito:$rootProject.amazonVersion"
    //implementation "com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.22.1"
    //implementation "com.amazonaws:aws-android-sdk-mobile-client:2.22.1"
    //Push
    implementation "com.google.firebase:firebase-messaging:20.1.7"

    // The Firebase core should not be imported, as it conflicts with Fastlane
    // implementation "com.google.firebase:firebase-core:17.0.0"
    //Parcelar
    implementation "org.parceler:parceler-api:$rootProject.parcelarVersion"
    annotationProcessor "org.parceler:parceler:$rootProject.parcelarVersion"

    //Calligraphy Custom Fonts
    
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'


    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.14'
    annotationProcessor 'org.projectlombok:lombok:1.18.14'


    //Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //Image Cache
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    //Crashlytics
    // Add the Firebase Crashlytics SDK.
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:18.0.2'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'

    implementation "com.google.android:flexbox:$rootProject.flexboxVersion"

    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'

    implementation "com.madgag.spongycastle:bcpg-jdk15on:$rootProject.spongyVersion"

    implementation "com.evernote:android-job:$rootProject.androidJobVersion"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    devImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    stagingImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation "com.atlassian.commonmark:commonmark:0.10.0"

    implementation "com.google.android.material:material:1.3.0-alpha03"

}

apply plugin: 'com.google.gms.google-services'
